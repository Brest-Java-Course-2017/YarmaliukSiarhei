#
#   Queries for InvestigationDaoImpl class
#
sql.getAllInvestigations=SELECT investigation_id, investigation_number, title, description, start_date, end_date \
                                            FROM investigation ORDER BY investigation_id LIMIT :limit OFFSET :offset

sql.getInvestigationsBetweenPeriod=SELECT investigation_id, investigation_number, title, description, start_date, end_date \
                                            FROM investigation WHERE start_date BETWEEN :start_period AND :end_period \
                                            ORDER BY investigation_id LIMIT :limit OFFSET :offset

sql.getEmployeeInvestigations=SELECT investigation.investigation_id, investigation.investigation_number, investigation.title, \
                                            investigation.description, investigation.start_date, investigation.end_date \
                                            FROM investigation \
                                            INNER JOIN investigation_staff_relations \
                                            ON investigation.investigation_id = investigation_staff_relations.investigation_id \
                                            WHERE investigation_staff_relations.employee_id = :employee_id \
                                            ORDER BY investigation.investigation_id LIMIT :limit OFFSET :offset

sql.getInvestigationById=SELECT investigation_id, investigation_number, title, description, start_date, end_date \
                                            FROM investigation WHERE investigation_id = :investigation_id

sql.addInvestigation=INSERT INTO investigation (investigation_number, title, description, start_date, end_date) \
                                            VALUES (:number, :title, :description, :startInvestigationDate, :endInvestigationDate)

sql.addInvestigationEmployeeRelations=INSERT INTO investigation_staff_relations (investigation_id, employee_id) \
                                            VALUES (:investigation_id, :employee_id)

sql.updateInvestigation=UPDATE investigation SET investigation_number = :number, title = :title, description = :description, \
                                            start_date = :startInvestigationDate, end_date = :endInvestigationDate WHERE investigation_id = :investigationId

sql.getInvestigation'sEmployeesId=SELECT employee_id FROM investigation_staff_relations WHERE investigation_id = :investigation_id ORDER BY employee_id

sql.deleteInvestigationEmployeeRelations=DELETE FROM investigation_staff_relations WHERE investigation_id = :investigation_id AND employee_id = :employee_id

sql.deleteInvestigationById=DELETE FROM investigation WHERE investigation_id = :investigation_id

#
#   Queries for EmployeeDaoImpl class
#
sql.getAllEmployees=SELECT employee_id, name, age, start_working_date FROM staff ORDER BY employee_id LIMIT :limit OFFSET :offset

sql.getInvolvedEmployeesInInvestigation=SELECT staff.employee_id, name, age, start_working_date \
                                            FROM staff \
                                            INNER JOIN investigation_staff_relations \
                                            ON staff.employee_id = investigation_staff_relations.employee_id \
                                            WHERE investigation_staff_relations.investigation_id = :investigation_id \
                                            ORDER BY staff.employee_id LIMIT :limit OFFSET :offset

sql.getEmployeeById=SELECT staff.employee_id, name, age, start_working_date FROM staff WHERE employee_id = :employee_id

sql.addEmployee=INSERT INTO staff (name, age, start_working_date) VALUES (:name, :age, :startWorkingDate)

sql.updateEmployee=UPDATE staff SET name = :name, age = :age, start_working_date = :startWorkingDate WHERE employee_id = :employeeId

sql.getEmployee'sInvestigationsId=SELECT investigation_id FROM investigation_staff_relations WHERE employee_id = :employee_id ORDER BY investigation_id

sql.deleteEmployeeById=DELETE FROM staff WHERE employee_id = :employee_id

sql.getEmployeesRating=SELECT staff.employee_id, ROUND( cast(staff.count(relations.investigation_id) as FLOAT) / inv.all_investigations_count *100 ) as rating \
                                            FROM staff \
                                            LEFT JOIN investigation_staff_relations as relations \
                                            ON staff.employee_id = relations.employee_id \
                                            CROSS JOIN (SELECT investigation.count(*) as all_investigations_count FROM investigation) AS inv \
                                            GROUP BY staff.employee_id \
                                            ORDER BY staff.employee_id \
                                            LIMIT :limit OFFSET :offset